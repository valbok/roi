CONNECT 'd:\roi\footdb.GDB' USER "admin" PASSWORD "1";
DROP DATABASE;

CREATE DATABASE 'd:\roi\footdb.GDB' USER "admin" PASSWORD "1";


CREATE DOMAIN INITIALS AS VARCHAR(15);
/* Domain definitions */
CREATE DOMAIN DHEIGHT AS VARCHAR(3)
	 Check (Value between 160 and 200);
CREATE DOMAIN DWEIGHT AS VARCHAR(2)
	 Check (Value between 65 and 90);
CREATE DOMAIN NAME AS VARCHAR(30);

/* Table: CITIES, */

CREATE TABLE CITIES 
(
  CITY_ID	INTEGER NOT NULL,
  CITY	NAME NOT NULL,
 PRIMARY KEY (CITY_ID)
);

/* Table: COUNTRIES */

CREATE TABLE COUNTRIES 
(
  COUNTRY_ID	INTEGER NOT NULL,
  COUNTRY	NAME NOT NULL,
 PRIMARY KEY (COUNTRY_ID)
);

CREATE TABLE STADIUMS 
(
  STADIUM_ID	INTEGER NOT NULL,
  STADIUM	NAME NOT NULL,
  COUNTRY_ID	INTEGER NOT NULL,
  MARK	VARCHAR(2) NOT NULL,
 PRIMARY KEY (STADIUM_ID)
);
ALTER TABLE STADIUMS ADD CONSTRAINT STADIUMS_COUNTRIES FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRIES (COUNTRY_ID);


CREATE TABLE TEAMS 
(
  TEAM_ID	INTEGER NOT NULL,
  TEAM	NAME NOT NULL,
  COUNTRY_ID	INTEGER NOT NULL,
  CITY_ID	INTEGER NOT NULL,
  STADIUM_ID	INTEGER NOT NULL,
 PRIMARY KEY (TEAM_ID)
);
ALTER TABLE TEAMS ADD CONSTRAINT TEAMS_CITIES FOREIGN KEY (CITY_ID) REFERENCES CITIES (CITY_ID);
ALTER TABLE TEAMS ADD CONSTRAINT TEAMS_COUNTRIES FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRIES (COUNTRY_ID);
ALTER TABLE TEAMS ADD CONSTRAINT TEAMS_STADIUMS FOREIGN KEY (STADIUM_ID) REFERENCES STADIUMS (STADIUM_ID);



CREATE TABLE PLAYERS 
(
  PLAYER_ID	INTEGER NOT NULL,
  LASTNAME	INITIALS NOT NULL,
  FIRSTNAME	INITIALS NOT NULL,
  BIRTH_DATE	TIMESTAMP NOT NULL,
  BIRTH_PLACE	INTEGER NOT NULL,
  HEIGHT	DHEIGHT NOT NULL,
  WEIGHT	DWEIGHT NOT NULL,
  AMPLUA	VARCHAR(10) NOT NULL,
  TEAM_ID	INTEGER NOT NULL,
  NUMBER	VARCHAR(2) NOT NULL,
 PRIMARY KEY (PLAYER_ID)
);
ALTER TABLE PLAYERS ADD CONSTRAINT PLAYERS_COUNTRIES FOREIGN KEY (BIRTH_PLACE) REFERENCES COUNTRIES (COUNTRY_ID);
ALTER TABLE PLAYERS ADD CONSTRAINT PLAYERS_TEAMS1 FOREIGN KEY (TEAM_ID) REFERENCES TEAMS (TEAM_ID);


CREATE TABLE POSTS 
(
  POST_ID	INTEGER NOT NULL,
  POST	NAME NOT NULL,
 PRIMARY KEY (POST_ID)
);


CREATE TABLE STAFF 
(
  STAFF_ID	INTEGER NOT NULL,
  LASTNAME	INITIALS NOT NULL,
  FIRSTNAME	INITIALS NOT NULL,
  BIRTH_DATE	TIMESTAMP NOT NULL,
  TEAM_ID	INTEGER NOT NULL,
  POST_ID	INTEGER NOT NULL,
 PRIMARY KEY (STAFF_ID)
);
ALTER TABLE STAFF ADD CONSTRAINT STAFF_POSTS FOREIGN KEY (POST_ID) REFERENCES POSTS (POST_ID);
ALTER TABLE STAFF ADD CONSTRAINT STAFF_TEAMS FOREIGN KEY (TEAM_ID) REFERENCES TEAMS (TEAM_ID);


CREATE TABLE TRANSFER 
(
  TRANSFER_ID	INTEGER NOT NULL,
  PLAYER_ID	INTEGER NOT NULL,
  FROM_TEAM	INTEGER NOT NULL,
  TO_TEAM	INTEGER NOT NULL,
  TRANSFER_DATE	TIMESTAMP NOT NULL,
  TERM	FLOAT NOT NULL,
  PRICE	NUMERIC(9, 2) NOT NULL,
 PRIMARY KEY (TRANSFER_ID)
);
ALTER TABLE TRANSFER ADD CONSTRAINT TRANSFER_PLAYERS FOREIGN KEY (PLAYER_ID) REFERENCES PLAYERS (PLAYER_ID);
ALTER TABLE TRANSFER ADD CONSTRAINT TRANSFER_TEAMS_FROM FOREIGN KEY (FROM_TEAM) REFERENCES TEAMS (TEAM_ID);
ALTER TABLE TRANSFER ADD CONSTRAINT TRANSFER_TEAMS_TO FOREIGN KEY (TO_TEAM) REFERENCES TEAMS (TEAM_ID);


CREATE GENERATOR GENCITIES;
CREATE GENERATOR GENCOUNTRIES;
CREATE GENERATOR GENPLAYERS;
CREATE GENERATOR GENPOSTS;
CREATE GENERATOR GENSTADIUMS;
CREATE GENERATOR GENSTAFF;
CREATE GENERATOR GENTEAMS;
CREATE GENERATOR GENTRANSFERS;


SET TERM ^ ;


/* Triggers only will work for SQL triggers */

CREATE TRIGGER CODECITIES FOR CITIES 
ACTIVE BEFORE INSERT POSITION 0
As 
Begin
New.City_Id=Gen_Id(GenCities,1);
End
 ^

COMMIT WORK ^
SET TERM ;^

SET TERM ^ ;


/* Triggers only will work for SQL triggers */

CREATE TRIGGER CODECOUNTRIES FOR COUNTRIES 
ACTIVE BEFORE INSERT POSITION 0
As 
Begin
New.Country_Id=Gen_Id(GenCountries,1);
End
 ^

COMMIT WORK ^
SET TERM ;^

SET TERM ^ ;


/* Triggers only will work for SQL triggers */

CREATE TRIGGER CODEPLAYERS FOR PLAYERS 
ACTIVE BEFORE INSERT POSITION 0
As 
Begin
New.Player_Id=Gen_Id(GenPlayers,1);
End
 ^

CREATE TRIGGER DELETE_INF FOR PLAYERS 
ACTIVE AFTER DELETE POSITION 0
As 
Begin
Delete From Transfer 
Where Players.Player_Id=Transfer.Player_Id;
End
 ^

COMMIT WORK ^
SET TERM ;^

SET TERM ^ ;


/* Triggers only will work for SQL triggers */

CREATE TRIGGER CODEPOSTS FOR POSTS 
ACTIVE BEFORE INSERT POSITION 0
As 
Begin
New.Post_Id=Gen_Id(GenPosts,1);
End
 ^

COMMIT WORK ^
SET TERM ;^

SET TERM ^ ;


/* Triggers only will work for SQL triggers */

CREATE TRIGGER CODESTADIUMS FOR STADIUMS 
ACTIVE BEFORE INSERT POSITION 0
As 
Begin
New.Stadium_Id=Gen_Id(GenStadiums,1);
End
 ^

COMMIT WORK ^
SET TERM ;^

SET TERM ^ ;


/* Triggers only will work for SQL triggers */

CREATE TRIGGER CODESTAFF FOR STAFF 
ACTIVE BEFORE INSERT POSITION 0
As 
Begin
New.Staff_Id=Gen_Id(GenStaff,1);
End
 ^

COMMIT WORK ^
SET TERM ;^

SET TERM ^ ;


/* Triggers only will work for SQL triggers */

CREATE TRIGGER CODETEAMS FOR TEAMS 
ACTIVE BEFORE INSERT POSITION 0
As 
Begin
New.Team_Id=Gen_Id(GenTeams,1);
End
 ^

COMMIT WORK ^
SET TERM ;^

SET TERM ^ ;


CREATE TRIGGER CODEtransfer FOR transfer
ACTIVE BEFORE INSERT POSITION 0
As 
Begin
	New.transfer_Id=Gen_Id(GENTRANSFERS,1);
End ^

COMMIT WORK ^
SET TERM ;^

/*--------------------------------------------------------------------*/
SET TERM ^ ;

/* Stored procedures */

CREATE PROCEDURE ADDTRANSFERS_UPDATEPLAYERS 
(
  IPLAYER_ID INTEGER,
  IFROM INTEGER,
  ITO INTEGER,
  ITRANSFER_DATE TIMESTAMP,
  ITERM FLOAT,
  IPRICE NUMERIC(9, 2),
  INUMBER VARCHAR(2)
)
AS
BEGIN EXIT; END ^


ALTER PROCEDURE ADDTRANSFERS_UPDATEPLAYERS 
(
  iplayer_id integer,	
  IFROM INTEGER,
  ITO INTEGER,
  ITRANSFER_DATE TIMESTAMP,
  ITERM FLOAT,
  IPRICE NUMERIC(9, 2),
  INUMBER VARCHAR(2)
)
AS
Begin
      Insert Into Transfer (From_Team,  To_Team, Transfer_Date, Term,    Price)
      Values (             :iFrom,      :iTo,    :iTransfer_Date,:ITERM,:iPrice);
      Update Players
      Set Team_Id=:iFrom, Number=:iNumber
              Where Players.Player_Id=:iPlayer_Id;
End
 ^

SET TERM ; ^
COMMIT WORK;


GRANT ALL ON CITIES TO "admin" WITH GRANT OPTION;
GRANT ALL ON COUNTRIES TO "admin" WITH GRANT OPTION;
GRANT ALL ON PLAYERS TO "admin" WITH GRANT OPTION;
GRANT ALL ON TEAMS TO "admin" WITH GRANT OPTION;
GRANT ALL ON STADIUMS TO "admin" WITH GRANT OPTION;
GRANT ALL ON STAFF TO "admin" WITH GRANT OPTION;
GRANT ALL ON POSTS TO "admin" WITH GRANT OPTION;
GRANT ALL ON TRANSFER TO "admin" WITH GRANT OPTION;

GRANT SELECT ON CITIES TO PUBLIC;
GRANT SELECT ON COUNTRIES TO PUBLIC;
GRANT SELECT ON PLAYERS TO PUBLIC;
GRANT SELECT ON TEAMS TO PUBLIC;
GRANT SELECT ON STADIUMS TO PUBLIC;
GRANT SELECT ON STAFF TO PUBLIC;
GRANT SELECT ON POSTS TO PUBLIC;
GRANT SELECT ON TRANSFER TO PUBLIC;

grant insert on transfer to ADDTRANSFERS_UPDATEPLAYERS ;
grant update on players to ADDTRANSFERS_UPDATEPLAYERS ;